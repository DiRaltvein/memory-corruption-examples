// ---------------------------------- LLVM ---------------------------------- \\

SETUP (https://clang.llvm.org/get_started.html)
clone llvm
- mkdir build && cd build
- apt-get update && apt-get install build-essential && apt-get install cmake
- cmake -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra" -DLLVM_ENABLE_RUNTIMES="compiler-rt" -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" ../llvm
- make
After compiling whole LLVM clang or clang-tidy can be rebuilt separatly
- make clang-tidy OR make clang

// ---------------------------------- Random ---------------------------------- \\


// ---------------------------------- Options used ---------------------------------- \\

[ubuntu 24] (does not build LLVM)
	- gcc
[ubuntu 22]
	- LLVM - /usr/llvm-project/build/bin/clang
	- cppcheck
	- ikos
[ubuntu 20]
	- symbiotic - /usr/symbiotic/scripts/symbiotic

// ---------------------------------- Local notes ---------------------------------- \\


[ppp] node a.js /mnt/a/master/projects/ppp/pppdump/pppdump.c dumpppp
	- node a.js /mnt/a/master/master/realworld_simplified/ppp.c main
[pacparser] node a.js /mnt/a/master/projects/pacparser/src/pacparser.c pacparser_find_proxy pacparser_find_proxy /mnt/a/master/projects/pacparser/src/spidermonkey/js/src
	- node a.js /mnt/a/master/master/realworld_simplified/pacparser.c main
[gpac] node a.js /mnt/a/master/projects/gpac/src/laser/lsr_dec.c lsr_translate_coords /mnt/a/master/projects/gpac/include
	- node a.js /mnt/a/master/master/realworld_simplified/gpac.c main
[gpac] node a.js /mnt/a/master/projects/gpac/src/filters/load_text.c gf_text_get_utf8_line /mnt/a/master/projects/gpac/include
	- node a.js /mnt/a/master/master/realworld_simplified/gpac_1.c main
[gpssim] node a.js /mnt/a/master/projects/gps-sdr-sim/gpssim.c main
	- node a.js /mnt/a/master/master/realworld_simplified/gps-sdr-sim.c main
[openrazer] node a.js /mnt/a/master/projects/openrazer/driver/razerchromacommon.c razer_chroma_standard_matrix_set_custom_frame
	- node a.js /mnt/a/master/master/realworld_simplified/openrazer.c main
[sofia-sip] node a.js /mnt/a/master/projects/sofia-sip/libsofia-sip-ua/sdp/sdp_parse.c parse_message /mnt/a/master/projects/sofia-sip/libsofia-sip-ua/su /mnt/a/master/projects/sofia-sip/open_c
	- node a.js /mnt/a/master/master/realworld_simplified/sofia-sip.c main
? [zephyr] node a.js /mnt/a/master/projects/zephyr/subsys/fs/fuse_fs_access.c fuse_fs_access_readdir
	- node a.js /mnt/a/master/master/realworld_simplified/zephyr.c main
[nanopb] node a.js /mnt/a/master/projects/nanopb/pb_decode.c pb_dec_string
	- node a.js /mnt/a/master/master/realworld_simplified/nanopb.c main
[json-c] node a.js /mnt/a/master/projects/json-c/apps/json_parse.c parseit /mnt/a/master/projects/json-c
	- node a.js /mnt/a/master/master/realworld_simplified/json-c.c main
CTU [picotcp] node a.js /mnt/a/master/projects/picotcp/modules/pico_fragments.c pico_fragments_reassemble /mnt/a/master/projects/picotcp/build/include /mnt/a/master/projects/picotcp/modules /mnt/a/master/projects/picotcp/include
	- node a.js /mnt/a/master/master/realworld_simplified/picotcp.c main
[jhead] node a.js /mnt/a/master/projects/jhead/jhead.c DoCommand
	- node a.js /mnt/a/master/master/realworld_simplified/jhead.c main
[FiND] node a.js /mnt/a/master/projects/FiND/validator/my_validator.cpp init_result /usr/include/mysql /mnt/a/master/subProjects/boinc /mnt/a/master/subProjects/boinc/lib /mnt/a/master/subProjects/boinc/db /mnt/a/master/subProjects/boinc/sched
	- node a.js /mnt/a/master/master/realworld_simplified/FiND.cc main
[mujs] node a.js /mnt/a/master/projects/mujs/jsdtoa.c js_strtod
	- node a.js /mnt/a/master/master/realworld_simplified/mujs.c main
[sniproxy] node a.js /mnt/a/master/projects/sniproxy/src/address.c new_address
	- node a.js /mnt/a/master/master/realworld_simplified/sniproxy.c main
[frr] node a.js /mnt/a/master/projects/frr/bgpd/bgp_open.c bgp_capability_software_version /mnt/a/master/projects/frr /mnt/a/master/projects/frr/lib /mnt/a/master/projects/frr/inlude/linux
	- node a.js /mnt/a/master/master/realworld_simplified/frr.c main
[MicroHttpServer] node a.js /mnt/a/master/projects/MicroHttpServer/c-version/lib/middleware.c _ReadStaticFiles
	- node a.js /mnt/a/master/master/realworld_simplified/MicroHttpServer.c main
[mongoose] node a.js /mnt/a/master/projects/mongoose/src/mqtt.c decode_variable_length
	- node a.js /mnt/a/master/master/realworld_simplified/mongoose.c main
[libde265] node a.js /mnt/a/master/projects/libde265/libde265/motion.cc derive_collocated_motion_vectors /mnt/a/master/projects/libde265
	- node a.js /mnt/a/master/master/realworld_simplified/libde265.cc main
[libeconf] node a.js /mnt/a/master/projects/libeconf/lib/libeconf.c econf_writeFile /mnt/a/master/projects/libeconf/include
	- node a.js /mnt/a/master/master/realworld_simplified/libeconf.c main
[podofo] node a.js /mnt/a/master/projects/podofo/src/podofo/main/PdfEncrypt.cpp PdfEncryptRC4 /mnt/a/master/projects/podofo/src
	- node a.js /mnt/a/master/master/realworld_simplified/podofo.cc main
[krb5] node a.js /mnt/a/master/projects/krb5/src/kdc/do_tgs_req.c process_tgs_req /mnt/a/master/projects/krb5/src/include
	- node a.js /mnt/a/master/master/realworld_simplified/krb5.c main
[libcue] node a.js /mnt/a/master/projects/libcue/cd.c track_set_index
	- node a.js /mnt/a/master/master/realworld_simplified/libcue.c main
[DemoIccMAX] node a.js /mnt/a/master/projects/DemoIccMAX/IccXML/IccLibXML/IccUtilXml.cpp icFixXml /mnt/a/master/projects/DemoIccMAX/IccProfLib /usr/include/libxml2/
	- node a.js /mnt/a/master/master/realworld_simplified/demolccMAX.cc main


// ---------------------------------- CLANG TIDY ---------------------------------- \\

/home/raltvein/packets/llvm-project/clang-tools-extra/clang-tidy	<- clang-tidy that comes with LLVM
- /misc		<- all checks are here
- python3 add_new_check.py <category like performance> <check name> 	<- add new check

clang-tidy array_out_of_bound.c -checks=-*,raltvein


// ---------------------------------- CLANG STATIC ANALYSIS ---------------------------------- \\

To add clang checker (https://clang-analyzer.llvm.org/checker_dev_manual.html)
- /home/raltvein/packets/llvm-project/clang/lib/StaticAnalyzer/Checkers/CMakeLists.txt
	add your checker name into the list and create file in Checkers directory
- /home/raltvein/packets/llvm-project/clang/include/clang/StaticAnalyzer/Checkers/Checkers.td
	add your created checker

see all availible checkers
clang -cc1 -analyzer-checker-help

Run custom clang checker
clang --analyze --analyzer-no-default-checks -Xanalyzer -analyzer-checker="core.RaltveinZero" <file>










https://www.cvedetails.com/vulnerability-list/year-2023/vulnerabilities.html?page=19&opov=1&order=3&trc=1757&sha=4ae91d54bdbef4601bd9c4cdb3252519105763a4
// -> MAIN https://www.cvedetails.com/vulnerability-list/year-2023/vulnerabilities.html?page=41&opmemc=1&order=3&trc=2798&sha=56f214f9adef32acf96792d39bffd5607ae3c835

# used cves
https://www.cvedetails.com/cve/CVE-2022-4603/
https://www.cvedetails.com/cve/CVE-2019-25078/
https://www.cvedetails.com/cve/CVE-2022-4603/
https://www.cvedetails.com/cve/CVE-2021-37778/
https://www.cvedetails.com/cve/CVE-2022-29021/
https://www.cvedetails.com/cve/CVE-2022-31003/
https://www.cvedetails.com/cve/CVE-2024-0321/
https://www.cvedetails.com/cve/CVE-2023-4260/
https://www.cvedetails.com/cve/CVE-2014-125106/
https://www.cvedetails.com/cve/CVE-2021-32292/
https://www.cvedetails.com/cve/CVE-2021-33304/
https://www.cvedetails.com/cve/CVE-2022-28550/
https://www.cvedetails.com/cve/CVE-2015-10065/
https://www.cvedetails.com/cve/CVE-2021-33797/
https://www.cvedetails.com/cve/CVE-2023-25076/
https://www.cvedetails.com/cve/CVE-2023-41361/
https://www.cvedetails.com/cve/CVE-2023-50965/
https://www.cvedetails.com/cve/CVE-2023-2905/
https://www.cvedetails.com/cve/CVE-2023-27103/
https://www.cvedetails.com/cve/CVE-2023-30078/
https://www.cvedetails.com/cve/CVE-2023-31568/
https://www.cvedetails.com/cve/CVE-2023-39975/
https://www.cvedetails.com/cve/CVE-2023-43641/
https://www.cvedetails.com/cve/CVE-2023-46602/


# found cvedetails
https://www.cvedetails.com/cve/CVE-2021-45423/ <- easy but hard to reproduce
https://www.cvedetails.com/cve/CVE-2022-1812/ <- example of wrong category

https://www.cvedetails.com/cve/CVE-2023-28753/ <- maybe
https://www.cvedetails.com/cve/CVE-2023-36328/ <- easy but do not see a bug
https://www.cvedetails.com/cve/CVE-2023-38632/ <- easy but how to extract logic? sockets
https://www.cvedetails.com/cve/CVE-2023-42299/ <- configuration meh
https://www.cvedetails.com/cve/CVE-2023-31976/ <- open issue as per 29.07.24
https://www.cvedetails.com/cve/CVE-2023-44398/ <- relies on external libraries (sudo apt install libbrotli-dev libinih-dev)
[https://www.cvedetails.com/cve/CVE-2023-5686/] https://github.com/radareorg/radare2/commit/1bdda93e348c160c84e30da3637acef26d0348de <- example of vulnerability that is hard to understand



https://www.cvedetails.com/cve/CVE-2023-47004/
https://www.cvedetails.com/cve/CVE-2023-48106/
https://www.cvedetails.com/cve/CVE-2023-48107/
https://www.cvedetails.com/cve/CVE-2023-49465/
https://www.cvedetails.com/cve/CVE-2023-49467/
https://www.cvedetails.com/cve/CVE-2023-49468/
https://www.cvedetails.com/cve/CVE-2023-42459/
https://www.cvedetails.com/cve/CVE-2023-1355/
https://www.cvedetails.com/cve/CVE-2023-23609/
https://www.cvedetails.com/cve/CVE-2023-25564/
https://www.cvedetails.com/cve/CVE-2023-39946/
https://www.cvedetails.com/cve/CVE-2023-39947/
https://www.cvedetails.com/cve/CVE-2023-42443/
https://www.cvedetails.com/cve/CVE-2023-46136/
https://www.cvedetails.com/cve/CVE-2023-0266/
https://www.cvedetails.com/cve/CVE-2020-18831/
https://www.cvedetails.com/cve/CVE-2021-3674/
https://www.cvedetails.com/cve/CVE-2021-32142/
https://www.cvedetails.com/cve/CVE-2021-32845/
https://www.cvedetails.com/cve/CVE-2021-32846/
https://www.cvedetails.com/cve/CVE-2021-34119/
https://www.cvedetails.com/cve/CVE-2021-46878/
https://www.cvedetails.com/cve/CVE-2021-46879/



thoughts:
[gpac]. Cppcheck can not find a problem when in the example the exploit is not triggered.
Eg. not 31 is passed to the function but 30. It is strange and I would argue that function should check for it anyway to be secure on its own and not rely
on environment or caller to check its parameters.

A lot of vulnerabilities are bound to some user input or data that comes from outside the application. In that case it is hard to detect memory corruptions because any method

People do not want to use fat pointers but also clang-tidy throws warning on any method that does not perform bound check. (like memcpy)

symbiotic wants a main fucntion that often is not present in single files that are analyzed in a projects
https://www.cvedetails.com/cve/CVE-2023-26489/ lol
https://www.cvedetails.com/cve/CVE-2023-42276/

https://github.com/NASA-SW-VnV/ikos/issues/197 got it quiet a few times

Sometimes I found additional vulnerabilities such as memory leak in CVE-2019-25078 using clang